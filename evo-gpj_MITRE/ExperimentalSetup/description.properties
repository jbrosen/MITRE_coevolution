! This file describes what each parameter changes in the algorithm and a sample specification
! Not specifying a parameter just means the default parameter will be used.
! Defualt parameter values are speficied in AlgorithmBase.java
! It is the responsibility of the user to ensure that all the operators specified are consistent!!

!the fitness function to use
fitness_op = fitness.SRFunctionFitness
!the initialization operator to use
initialize_op = operator.TreeInitialize
!the selection operator to use
selection_op = operator.TournamentSelection
!the mutation operator to use
mutate_op = operator.SubtreeMutate
!the crossover operator to use
xover_op = operator.SinglePointCrossover
!the equalizer operator to use
equalizer_op = operator.TreeDynamicEqualizer

xover_rate = 0.9
mutation_rate = 0.0
num_gens = 50
num_trials = 30
pop_size = 1000
!number of best individuals to carry over to next generation
elite = 0
bin_width = 5
tourney_size = 7
tree_initial_max_depth = 6
tree_mutate_max_depth = 17
tree_xover_max_depth = 17
tree_xover_tries = 10
function_set = + - * mydivide exp mylog sqrt square cube quart sin cos
terminal_set = X1
problem = (+ X1 (+ (* X1 X1) (+ (* X1 (* X1 X1)) (* (* X1 X1) (* X1 X1)))))
problem_type = SRFunction
! the initial seed to use in the algorithm. Not specifying this results in just using a random number (the current system time)
rng_seed = 44586
! Sometimes we want to do regression to the discrete (but still infinite) range of Integers. Set this to false to do so.
fitness_as_double = true
! Specify p-value for P-Norm, used to weight errors (the larger p value, the more weight outliers have)
! the norm function to use (p=1 means L1, p=2 means L2, etc. p=-1 means Inf-norm)
fitness_pnorm = 2
